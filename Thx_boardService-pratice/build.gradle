plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.thxforservice'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	implementation 'org.apache.httpcomponents.core5:httpcore5:5.3'

	implementation 'org.modelmapper:modelmapper:3.2.1'

	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'

	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testRuntimeOnly 'com.h2database:h2'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

// JUnit 5 (JUnit Platform) 사용 설정
tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL 자동 생성된 파일이 저장될 디렉토리 지정
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
	// QueryDSL이 생성한 Q클래스를 소스 코드로 인식하도록 추가
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	// Java 컴파일 시, QueryDSL이 생성한 Q클래스도 함께 컴파일되도록 설정
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
	// 'gradle clean' 실행 시 QueryDSL이 생성한 Q클래스 삭제 (최신 상태 유지)
	file(querydslDir).deleteDir()
}
